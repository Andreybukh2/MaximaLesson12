/*
На входе получаем список Фамилий сотрудников.
Необходимо вывести всех сотрудников, которые начинаются на определённый символ.
(Например вывести всех сотрудников с фамилий начинающихся на Е)

1. Создали поток на вход - Stream.of("Мальков","Епифанов", "Быстров","Ергашов", "Корякин", "Синяев","Зейналов", "Ермаков")
2. Совершили промежуточную операцию .filter которая "под капотом" создала за нас объект с произвольным названием экземпляра (s)
->, в котором вернула {return вызвав у s. метод contains позволяющий проверить, содержит ли String другую подстроку или нет
с параметром необходимым нам по условию задачи ("Е");}
3. Вне технического задания, я добавил объект класса AtomicInteger (java.util.concurrent.atomic)
(с его методом который увеличит предыдущее значение на единицу) для большей наглядности и приближения к реальному сервису.
Для полноты сервиса, я бы добавил сюда проверку на ввод пустого значения от пользователя, преобразование маленько буквы в большую и обратно
в случае необходимости реализации поиска фамилий с маленькой буквы, возможность поиска по номеру элемента. Сервис по склонению фамилий.
 */
package Homework15;

import java.util.concurrent.atomic.AtomicInteger;
import java.util.stream.Stream;

public class Task1 {
    public static void main(String[] args) {
        AtomicInteger counter = new AtomicInteger(0);
        Stream.of("Мальков","Епифанов", "Быстров","Ергашов", "Корякин", "Синяев","Зейналов", "Ермаков")
                .filter((s) -> {
                    return s.contains("Е");
                })
                .peek(s -> {
                    counter.incrementAndGet();
                })
                .forEach(s -> {
                    System.out.println("The " + counter.get() + " value has found - " + s + ";");
                });
    }
}